name: CD - Deploy to Production

on:
  push:
    branches: [dev]
  workflow_dispatch: # Allow manual deployment trigger

jobs:
  run-tests:
    name: Run Tests
    uses: ./.github/workflows/tests.yml

  auto-merge:
    name: Auto-merge dev to main
    runs-on: ubuntu-latest
    needs: [run-tests]
    # Only run on push to dev, not on manual trigger
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev' && github.repository == 'theetquentin/Gather'
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Merge dev into main
        run: |
          git fetch origin
          git checkout main
          git pull origin main
          git merge origin/dev --no-ff -m "Auto-merge dev to main after successful tests"
          git push origin main

  deploy:
    name: Deploy to Production Server
    runs-on: self-hosted
    needs: [auto-merge]
    # Run after auto-merge succeeds, or skip auto-merge if manual trigger
    if: |
      github.repository == 'theetquentin/Gather' &&
      (needs.auto-merge.result == 'success' || needs.auto-merge.result == 'skipped')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull latest changes
        run: |
          git fetch origin
          git checkout main
          git pull origin main

      - name: Create backend .env file from secrets
        run: |
          cat > .env << EOF
          BACKEND_PORT=${{ secrets.BACKEND_PORT }}
          MONGO_URI=${{ secrets.MONGO_URI }}
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          NODE_ENV=production
          DOMAIN=${{ secrets.DOMAIN }}
          API_DOMAIN=${{ secrets.API_DOMAIN }}
          MAIL=${{ secrets.MAIL }}
          EOF

      - name: Create frontend .env file from secrets
        run: |
          cat > frontend/.env << EOF
          VITE_APP_ENV=prod
          VITE_BACKEND_PORT=${{ secrets.VITE_BACKEND_PORT }}
          VITE_FRONTEND_PORT=${{ secrets.VITE_FRONTEND_PORT }}
          VITE_API_DOMAIN=${{ secrets.VITE_API_DOMAIN }}
          EOF

      - name: Deploy to production
        run: |
          # Run production deployment script
          ./scripts/prod.sh

      - name: Show container status
        run: docker compose ps

  verify-deployment:
    name: Verify Deployment
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Check Backend Health
        run: |
          sleep 10
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.API_DOMAIN }}/health || echo "000")
          if [ "$response" = "200" ] || [ "$response" = "404" ]; then
            echo "✅ Backend is responding"
          else
            echo "⚠️ Backend health check returned: $response"
          fi

      - name: Check Frontend Health
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ secrets.DOMAIN }} || echo "000")
          if [ "$response" = "200" ]; then
            echo "✅ Frontend is accessible"
          else
            echo "⚠️ Frontend health check returned: $response"
          fi
