#!/bin/bash
set -e

BACKEND_CONF="./nginx/conf.d/backend.conf"
FRONTEND_CONF="./nginx/conf.d/frontend.conf"
BACKEND_HTTP="./nginx/conf.d/backend.conf.http"
BACKEND_HTTPS="./nginx/conf.d/backend.conf.https"
FRONTEND_HTTP="./nginx/conf.d/frontend.conf.http"
FRONTEND_HTTPS="./nginx/conf.d/frontend.conf.https"

echo "üöÄ Lancement du d√©ploiement en production..."

# √âtape 0 : Cr√©er les dossiers certbot et v√©rifier les permissions
CERT_DIR="./certbot/conf"
WWW_DIR="./certbot/www"
mkdir -p "$CERT_DIR"
mkdir -p "$WWW_DIR/.well-known/acme-challenge"

# S'assurer que les dossiers sont accessibles en √©criture
chmod -R 755 ./certbot || true
if [ ! -w "$CERT_DIR" ]; then
  echo "‚ö†Ô∏è  Attention : vous n'avez pas les droits d'√©criture sur $CERT_DIR"
  echo "Ajustez les permissions avec: sudo chown -R \$USER:\$USER ./certbot"
  exit 1
fi

echo "‚úÖ Dossiers Certbot cr√©√©s et configur√©s"

# √âtape 1 : Copier les configs HTTP et d√©marrer les services
echo "üîπ √âtape 1 : Configuration HTTP et d√©marrage des services..."
cp "$BACKEND_HTTP" "$BACKEND_CONF"
cp "$FRONTEND_HTTP" "$FRONTEND_CONF"
docker compose up -d frontend backend nginx

# Red√©marrer Nginx pour qu'il monte correctement le volume certbot/www
echo "üîπ Red√©marrage de Nginx pour monter les volumes..."
docker compose restart nginx
sleep 2

# √âtape 2 : G√©n√©ration du certificat SSL si n√©cessaire
if [ ! -d "./certbot/conf/live" ]; then
  echo "üîπ √âtape 2 : G√©n√©ration du certificat SSL avec Certbot..."
  docker compose run --rm certbot
else
  echo "‚úÖ Les certificats SSL existent d√©j√†, passage √† HTTPS..."
fi

# √âtape 3 : Basculer vers HTTPS
echo "üîπ √âtape 3 : Basculement vers HTTPS..."
cp "$BACKEND_HTTPS" "$BACKEND_CONF"
cp "$FRONTEND_HTTPS" "$FRONTEND_CONF"

# √âtape 4 : Relance de Nginx
echo "üîπ √âtape 4 : Relance de Nginx..."
docker compose restart nginx

echo "‚úÖ D√©ploiement termin√© !"
docker compose ps
