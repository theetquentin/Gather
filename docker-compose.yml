services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: gather-backend
    env_file:
      - ./.env
    expose:
      - ${BACKEND_PORT:-3000}
    networks:
      - gather-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_APP_ENV: prod
        VITE_API_DOMAIN: api.gather.quentintheet.fr
    container_name: gather-frontend
    expose:
      - ${VITE_FRONTEND_PORT:-5173}
    networks:
      - gather-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: gather-nginx
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        - ./nginx/conf.d:/etc/nginx/conf.d
        - ./certbot/www:/var/www/certbot
        - ./certbot/conf:/etc/letsencrypt
    command: /bin/sh -c "rm -f /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    networks:
      - gather-network
    restart: unless-stopped

  # CERTBOT for SSL Certificates
  certbot:
    image: certbot/certbot:latest
    container_name: gather-certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: >
      sh -c "certbot certonly --webroot
      --webroot-path=/var/www/certbot
      --email ${MAIL}
      --agree-tos
      --no-eff-email
      --keep-until-expiring
      --non-interactive
      -d ${DOMAIN}
      -d ${API_DOMAIN}"
    networks:
      - gather-network

networks:
  gather-network:
    driver: bridge
